Implement a generic server-config object (server-side), which gets sent to the client for the config page.
  - Could look something like this:
    //List of objects, which is sent to the client. Client then creates the config UI from this.
    var serverConfig = [

      {
        //This could also be initialized from the localization file, but will need more work, as the client will need to choose language at the same time the config is done.
        configName: "Number of Werewolves",
        configNameInternal: "numWerewolves",
        configType: "intInput",
        initVal: 2
      },

      {
        configName: "Timeout in seconds for Phase 'Werewolf'",
        configNameInternal: "phaseTimeWerewolf",
        configType: "intInput",
        initVal: 10
      },

      //...
    ]


Clear previous inputs if client gets rejected from joining (because of password)?


Game needs a disconnect button (needs to remove client from GameHandler and show room list again.)

Change Broadcast of playerData so it only gets sent to the specific player (e.g. Player1 refreshes, only he gets a message, not everyone.)


    


Replace ugly image file upload button with player-data clickable image, maybe at the side of the player name 
(see https://stackoverflow.com/a/18803568 )


Maybe refactor playerData in GamePhaseHandler into playerData and playerDataSecret?
  - For roles, currentVote
  - Would need to add additional functionality to broadcastPlayerData, which sends each secret playerData to the specific socket in UUIDSocketMap
  - Would also need to replace all instances of secret data (e.g. roles, currentVote) with the other datastructure
  - Would need to make an additional event e.g. "secret_player_data_update" which has to be handled on client-side as well.


Finish Voting implementation with results.
  - Maybe just aggregate the votes and store the result, the 'effect' happens in a different phase
    - For e.g. the Witch, all "Deaths" are announced at the beginning of the "Day" phase. So the Beginning of the phase "Day" looks at a list of all "Deaths" 
      (each death also has a cause for e.g. the village elder role, which survives the first werewolf/special role kill)
  - Clients should somehow receive an overview of the voting, at least on the "Day" voting/lynching. 
    - Just make a "Day Vote Result" phase with timeout of e.g. 10 seconds, where number of votes are shown for each person

Own Player Details have to be displayed somewhere, e.g. image, dead/alive, mayor status

Dead Players should be displayed differently
  - Show "Dead" in own player details
  - In other player cards, dead players are displayed at the end of the list, grayed out, without click events.

Win-Condition on Server-Side
  - Keep track of dead people
  - At the beginning of the "Day" and the end of the "Day", win conditions are checked / votes and special abilities regarding death of players are resolved.



Maybe think about encryption (e.g. using https://github.com/auth0/socketio-jwt , https://wmyers.github.io/technical/nodejs/Simple-JWT-auth-for-SocketIO/ ), if it is easy to implement.

Implement special roles *AFTER* Townspeople/Werewolves is working perfectly. Implement and test step by step, one by one to prevent overarching errors.